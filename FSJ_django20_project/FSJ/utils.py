from django.core.exceptions import PermissionDeniedfrom .models import *def is_FSJ_user(usr):    user = get_FSJ_user(usr)    if not isinstance(user, Student) and not isinstance(user, Adjudicator) and not isinstance(user, Coordinator):        raise PermissionDenied    return Truedef get_FSJ_user(usr):    FSJ_user = None    try:        FSJ_user = Student.objects.get(ccid=usr)    except Student.DoesNotExist:        try:            FSJ_user = Adjudicator.objects.get(ccid=usr)        except Adjudicator.DoesNotExist:            try:                FSJ_user = Coordinator.objects.get(ccid=usr)            except Coordinator.DoesNotExist:                pass    return FSJ_userdef get_standard_context(usr):    context = dict()    context['FSJ_user'] = usr    return context